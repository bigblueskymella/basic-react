import React, { useReducer } from "react";

const initialState = { todos: [] };

const reducer = (state, action) => {
  switch (action.type) {
    case "ADD_TODO":
      return { ...state, todos: [...state.todos, action.payload] };
    case "TOGGLE_TODO":
      return {
        ...state,
        todos: state.todos.map((todo) =>
          todo.id === action.payload ? { ...todo, done: !todo.done } : todo
        ),
      };
    case "DELETE_TODO":
      return {
        ...state,
        todos: state.todos.filter((todo) => todo.id !== action.payload),
      };
    default:
      return state;
  }
};

const App = () => {
  const [state, dispatch] = useReducer(reducer, initialState);
  const [text, setText] = React.useState("");

  const handleAddTodo = () => {
    if (text.trim() === "") return;
    dispatch({
      type: "ADD_TODO",
      payload: { id: Date.now(), text, done: false },
    });
    setText("");
  };

  return (
    <div>
      <h1>할 일 목록</h1>
      <input
        value={text}
        onChange={(e) => setText(e.target.value)}
        placeholder="할 일을 입력하세요"
      />
      <button onClick={handleAddTodo}>추가</button>
      <ul>
        {state.todos.map((todo) => (
          <li
            key={todo.id}
            onClick={() => dispatch({ type: "TOGGLE_TODO", payload: todo.id })}
            style={{
              textDecoration: todo.done ? "line-through" : "none",
            }}
          >
            {todo.text}
            <button
              onClick={(e) => {
                e.stopPropagation();
                dispatch({ type: "DELETE_TODO", payload: todo.id });
              }}
            >
              삭제
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default App;
